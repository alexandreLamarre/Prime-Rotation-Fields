{"version":3,"sources":["SquareMatrix.js","helpers.js","CustomCanvas.js","App.js","serviceWorker.js","index.js"],"names":["assert","require","SquareMatrix","array2d","length","this","container","vector","toString","return_vector","i","value","j","push","other","new_mat","new_row","dotProduct","getRow","getColumn","v1","v2","sum","rotateLineSegment","radians","start","end","ROTATIONMATRIX","Math","cos","sin","diff","r_vector","rMultiply","CustomCanvas","props","state","height","width","centerX","centerY","running","num_primes","primes","points","degree","scale","dragging","mouseX","mouseY","offsetX","offsetY","colored","canvas","React","createRef","w","window","innerWidth","h","innerHeight","setState","current","ctx","getContext","increment","start_point","end_point","beginPath","moveTo","lineTo","strokeStyle","parseInt","globalAlpha","stroke","closePath","e","target","parseFloat","num","bool_array","pow","generatePrimes","createPrimeList","degree_increment","offset","undefined","PI","current_scale","delta","sign","deltaY","v","previousX","previousY","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","new_offsetX","new_offsetY","extension","image","toDataURL","link","document","createElement","href","download","body","appendChild","click","removeChild","className","onWheel","zoomCamera","onMouseLeave","setDrag","onMouseMove","updateCamera","onMouseDown","onMouseUp","ref","style","type","onChange","setPrimeTarget","min","step","max","setDegree","setColored","onClick","drawPrimeRotation","resetCamera","title","saveAs","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5904525c.chunk.js","sourcesContent":["var assert = require('assert');\r\n\r\nclass SquareMatrix{\r\n  constructor(array2d){\r\n    assert(array2d.length === array2d[0].length)\r\n    this.container = array2d;\r\n  }\r\n\r\n  lMultiply(vector){\r\n    assert(vector.length === this.container.length, \"vector \" + vector.toString()+\r\n              \"vector dimension \"+vector.length.toString()+\"versus matrix \" + this.container.toString() +\r\n              \"of dimension \"+ this.container.length);\r\n    const return_vector = [];\r\n    for(let i = 0; i < vector.length; i++){\r\n      var value = 0;\r\n      for(let j = 0; j < vector.length; j++){\r\n        value += vector[j]*this.container[j][i];\r\n      }\r\n      return_vector.push(value);\r\n    }\r\n    return return_vector;\r\n  }\r\n\r\n  rMultiply(vector){\r\n    assert(vector.length === this.container.length, \"vector \" + vector.toString()+\r\n              \"vector dimension \"+vector.length.toString()+\"versus matrix \" + this.container.toString() +\r\n              \"of dimension \"+ this.container.length);\r\n    const return_vector = [];\r\n    for(let i = 0; i < vector.length; i++){\r\n      var value = 0;\r\n      for(let j = 0; j < vector.length; j++){\r\n        value += this.container[i][j]*vector[j]\r\n      }\r\n      return_vector.push(value);\r\n    }\r\n    return return_vector;\r\n  }\r\n\r\n  matrixMultiply(other){\r\n    assert(other.container.length === this.container.length, \"matrix \" +\r\n        this.container.toString() + \" other matrix \" + other.container.toString());\r\n    const new_mat = [];\r\n    for(let i = 0; i < this.container.length; i++){\r\n      const new_row = [];\r\n      for(let j = 0; j < this.container.length; j++){\r\n        const row = this.getRow(i);\r\n        const col = other.getColumn(j);\r\n        const value = dotProduct(row, col);\r\n        new_row.push(value);\r\n      }\r\n      new_mat.push(new_row);\r\n    }\r\n    return new_mat;\r\n  }\r\n\r\n  getMatrix(){\r\n    return this.container;\r\n  }\r\n\r\n  getRow(i){\r\n    assert(i < this.container.length, \"matrix dimension \"\r\n                + this.container.length.toString()+ \", access index \" + i.toString());\r\n    const return_vector = [];\r\n    for(let j = 0; j < this.container.length; j++){\r\n      return_vector.push(this.container[i][j]);\r\n    }\r\n    return return_vector;\r\n  }\r\n\r\n  getColumn(i){\r\n    assert(i < this.container.length, \"matrix dimension \"\r\n                + this.container.length.toString()+ \", access index \" + i.toString());\r\n    const return_vector = [];\r\n    for(let j = 0; j < this.container.length; j++){\r\n      return_vector.push(this.container[j][i]);\r\n    }\r\n    return return_vector;\r\n  }\r\n}\r\n\r\nexport default SquareMatrix;\r\n\r\nfunction dotProduct(v1,v2){\r\n  var sum = 0;\r\n  for(let i = 0; i < v1.length; i ++){\r\n    sum += v1[i]*v2[i];\r\n  }\r\n  return sum\r\n}\r\n","import SquareMatrix from \"./SquareMatrix\";\r\n\r\nexport function generatePrimes(num){\r\n  const bool_array = [];\r\n  for(let i = 0; i < num; i++){\r\n    bool_array.push(true);\r\n  }\r\n\r\n  for(let i = 2; i < num; i++){\r\n    if(bool_array[i-1] === true){\r\n      for(let j = Math.pow(i,2); j < num; j+= i){\r\n        bool_array[j-1] = false;\r\n      }\r\n    }\r\n  }\r\n  const primes = [];\r\n  for(let i = 0; i < bool_array.length; i++){\r\n    if(bool_array[i] === true && i !== bool_array.length-1) primes.push(i+1);\r\n  }\r\n  return primes;\r\n}\r\n\r\n\r\nexport function rotateLineSegment(radians, start, end){\r\n  const ROTATIONMATRIX = new SquareMatrix([[Math.cos(radians), -Math.sin(radians)],\r\n      [Math.sin(radians), Math.cos(radians)]]);\r\n  const diff = [end[0] - start[0], end[1]-start[1]]\r\n  const r_vector = ROTATIONMATRIX.rMultiply(diff);\r\n  r_vector[0]+= start[0];\r\n  r_vector[1]+= start[1];\r\n  return r_vector;\r\n}\r\n","import React from \"react\";\r\nimport {generatePrimes, rotateLineSegment} from \"./helpers\";\r\n\r\nimport \"./CustomCanvas.css\";\r\n\r\nclass CustomCanvas extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      height: 0,\r\n      width: 0,\r\n      centerX: 0,\r\n      centerY: 0,\r\n      running: false,\r\n      num_primes:500,\r\n      primes: [],\r\n      points: [],\r\n      degree: 90,\r\n      scale: 1,\r\n      dragging:false,\r\n      mouseX: 0,\r\n      mouseY: 0,\r\n      offsetX: 0,\r\n      offsetY:0,\r\n      colored: false,\r\n    };\r\n    this.canvas = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    const w = window.innerWidth*0.60;\r\n    const h = window.innerHeight*0.60;\r\n    this.setState({width: w, height: h, centerX: w/2, centerY: h/2});\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this.canvas.current.width = this.state.width;\r\n    this.canvas.current.height = this.state.height;\r\n    const ctx = this.canvas.current.getContext(\"2d\");\r\n    ctx.scale(this.state.scale, this.state.scale);\r\n    // ctx.clearRect(0,0, this.state.width, this.state.height);\r\n    // ctx.scale(this.state.scale, this.state.scale);\r\n    const points = this.state.points;\r\n    const increment = 255/points.length;\r\n    const colored = this.state.colored;\r\n    for(let i = 0; i < points.length-1; i ++){\r\n      const start_point = points[i][0];\r\n      const end_point = points[i][1];\r\n      ctx.beginPath();\r\n      ctx.moveTo(start_point[0] + this.state.offsetX, start_point[1]+this.state.offsetY);\r\n      ctx.lineTo(end_point[0]+this.state.offsetX, end_point[1]+this.state.offsetY);\r\n\r\n      ctx.strokeStyle = colored === true?\"rgb(\"+parseInt(255-increment*i).toString()+ \",0,0)\": \"rgb(0,0,0)\";\r\n      ctx.globalAlpha = 1;\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    }\r\n  }\r\n\r\n  setPrimeTarget(e){\r\n    const value = parseInt(e.target.value);\r\n    this.setState({num_primes: value});\r\n  }\r\n\r\n  setDegree(e){\r\n    const value = parseFloat(e.target.value);\r\n    this.setState({degree: value});\r\n  }\r\n\r\n  setColored(e){\r\n    const colored = this.state.colored;\r\n    this.setState({colored: !colored});\r\n  }\r\n\r\n  createPrimeList(){\r\n    const prime_array = generatePrimes(this.state.num_primes);\r\n    return prime_array;\r\n  }\r\n\r\n  drawPrimeRotation(){\r\n    const primes = this.createPrimeList(this.state.num_primes);\r\n    const degree_increment = this.state.degree;\r\n    const centerX = this.state.centerX;\r\n    const centerY = this.state.centerY;\r\n    this.canvas.current.width = this.state.width;\r\n    this.canvas.current.height = this.state.height;\r\n    const ctx = this.canvas.current.getContext(\"2d\");\r\n    var degree = 0;\r\n    var start_point = [centerX,centerY];\r\n    var end_point = [centerX,centerY];\r\n    const points = [];\r\n    for(let i = 0; i < primes.length; i++){\r\n      start_point = end_point;\r\n      var offset = primes[i-1] === undefined?primes[i]:primes[i]-primes[i-1];\r\n      end_point = [start_point[0]+offset, start_point[1]];\r\n      end_point = rotateLineSegment(Math.PI*degree/180,start_point,end_point);\r\n      degree += degree_increment;\r\n      degree = degree%360;\r\n      points.push([start_point, end_point]);\r\n    }\r\n    this.setState({points: points, primes: primes})\r\n  }\r\n\r\n  zoomCamera(e){\r\n    const current_scale = this.state.scale;\r\n    const delta = -Math.sign(e.deltaY)*0.05;\r\n    this.setState({scale: current_scale+delta});\r\n  }\r\n\r\n  resetCamera(){\r\n    this.setState({scale:1, offsetX:0, offsetY:0});\r\n  }\r\n\r\n  setDrag(e,v){\r\n    this.setState({dragging: v});\r\n  }\r\n\r\n\r\n  updateCamera(e){\r\n    const previousX = this.state.mouseX;\r\n    const previousY = this.state.mouseY;\r\n    if(this.state.dragging === true){\r\n      const rect = this.canvas.current.getBoundingClientRect();\r\n      const x = e.clientX - rect.left;\r\n      const y = e.clientY - rect.top;\r\n      const new_offsetX = this.state.offsetX +(x - previousX);\r\n      const new_offsetY = this.state.offsetY + (y - previousY);\r\n      this.setState({mouseX:x, mouseY:y, offsetX: new_offsetX,\r\n        offsetY: new_offsetY});\r\n    }\r\n    else{\r\n      const rect = this.canvas.current.getBoundingClientRect();\r\n      const x = e.clientX - rect.left;\r\n      const y = e.clientY - rect.top;\r\n      this.setState({mouseX : x, mouseY: y});\r\n    }\r\n\r\n  }\r\n\r\n  saveAs(extension){\r\n    const canvas = this.canvas.current;\r\n    const image = canvas.toDataURL(\"primes/\"+extension);\r\n    var link = document.createElement('a');\r\n    link.href = image;\r\n    link.download = 'primes.'+extension;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  render(){\r\n    return <div>\r\n              <canvas className = \"primeCanvas\"\r\n              onWheel = {(e) => this.zoomCamera(e)}\r\n              onMouseLeave = {(e) => this.setDrag(e,false)}\r\n              onMouseMove = {(e) => this.updateCamera(e)}\r\n              onMouseDown = {(e) => this.setDrag(e, true)}\r\n              onMouseUp = {(e) => this.setDrag(e, false)}\r\n              ref = {this.canvas}\r\n              style = {{height: this.state.height, width: this.state.width}}\r\n\r\n              ></canvas>\r\n              <br></br>\r\n              <br></br>\r\n              <input className = \"slider\"\r\n              type=\"range\"\r\n              onChange = {(e) => this.setPrimeTarget(e)}\r\n              min = \"500\"\r\n              step = \"1\"\r\n              value = {this.state.num_primes}\r\n              max = \"1000000\"/>\r\n              <br></br>\r\n              <label> Primes up to: {this.state.num_primes}  </label>\r\n              <br></br>\r\n              <input className = \"slider\"\r\n              type = \"range\"\r\n              min = \"0.5\"\r\n              max = \"359.5\"\r\n              step = \"0.5\"\r\n              value = {this.state.degree}\r\n              onChange = {(e) => this.setDegree(e)}\r\n              />\r\n              <br></br>\r\n              <label> Rotation: {this.state.degree} degrees  </label>\r\n              <br></br>\r\n              <label> Color :  </label>\r\n              <input onChange = {(e) => this.setColored(e)}\r\n              type = \"checkbox\"/>\r\n              <br></br>\r\n              <button onClick = {() => this.drawPrimeRotation()}> Prime Rotation </button>\r\n              <button onClick = {() => this.resetCamera()}>Reset Camera</button>\r\n              <div className = \"dropdown\">\r\n              <button className = \"saveB\"\r\n              title = \"Save as\">\r\n              Save as\r\n              </button>\r\n              <div className = \"dropdown-content\">\r\n                <a className = \"aFile\" onClick = {() => this.saveAs(\"png\")}>.png</a>\r\n                <a className = \"aFile\" onClick = {() => this.saveAs(\"jpg\")}>.jpg</a>\r\n              </div>\r\n            </div>\r\n\r\n           </div>\r\n  }\r\n}\r\n\r\nexport default CustomCanvas;\r\n","import React from 'react';\nimport './App.css';\nimport CustomCanvas from \"./CustomCanvas\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <CustomCanvas/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}